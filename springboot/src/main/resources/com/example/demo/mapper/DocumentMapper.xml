<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.DocumentMapper">

    <resultMap type="com.example.demo.entity.Document" id="DocumentResult">
        <result property="id"    column="id"    />
        <result property="itemNo"    column="item_no"    />
        <result property="materialNo"    column="material_no"    />
        <result property="documentName"    column="document_name"    />
        <result property="documentType"    column="document_type"    />
        <result property="sequenceNo"    column="sequence_no"    />
        <result property="approvalStatus"    column="approval_status"    />
        <result property="publishStatus"    column="publish_status"    />
        <result property="documentVersion"    column="document_version"    />
        <result property="documentPath"    column="document_path"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
        <result property="approvalTime"    column="approval_time"    />
        <result property="publishTime"    column="publish_time"    />
        <result property="userId"    column="user_id"    />
        <result property="subId"    column="sub_id"    />
        <result property="deleted"    column="deleted"    />
        <association property="user"  column="user_id" select="getUserById"></association>
        <association property="substitution"  column="sub_id" select="getUserById"></association>
    </resultMap>
    <select id="getUserById" parameterType="int" resultMap="com.example.demo.mapper.UserMapper.UserResult">
        select * from user where id=#{id}
    </select>
    <sql id="selectDocumentVo">
        SELECT d1.*, u1.*, u2.*
        FROM document d1
                 INNER JOIN user u1 ON d1.user_id = u1.id
                 LEFT JOIN user u2 ON d1.sub_id = u2.id

    </sql>

    <select id="findDocumentList" parameterType="com.example.demo.entity.Document" resultMap="DocumentResult">
        <include refid="selectDocumentVo"/>
        where d1.id in (
        select max(d2.id)
        from document d2
        group by d2.item_no, d2.material_no, d2.document_type, d2.sequence_no
        )
        <if test="documentQueryParam != null">
            <!-- 创建时间起始查询时间不为空时，添加起始时间条件 -->
            <if test="documentQueryParam.createTimeStart != null">
                and d1.create_time &gt;= #{documentQueryParam.createTimeStart}
            </if>
            <!-- 创建时间结束查询时间不为空时，添加结束时间条件 -->
            <if test="documentQueryParam.createTimeEnd != null">
                and d1.create_time &lt;= #{documentQueryParam.createTimeEnd}
            </if>
            <if test="documentQueryParam.itemNo != null and documentQueryParam.itemNo != ''">
                and d1.item_no like CONCAT('%',#{documentQueryParam.itemNo}, '%')
            </if>
            <if test="documentQueryParam.materialNo != null and documentQueryParam.materialNo != ''">
                and d1.material_no like CONCAT('%',#{documentQueryParam.materialNo}, '%')
            </if>
            <if test="documentQueryParam.approvalStatus != null and documentQueryParam.approvalStatus != ''">
                and d1.approval_status like CONCAT('%',#{documentQueryParam.approvalStatus}, '%')
            </if>
            <if test="documentQueryParam.userId != null and documentQueryParam.userId != ''">
                and u.id like CONCAT('%',#{documentQueryParam.userId}, '%')
            </if>
            <if test="documentQueryParam.documentType != null and documentQueryParam.documentType.size() > 0">
                and d1.document_type in
                <foreach item="item" index="index" collection="documentQueryParam.documentType" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <!-- <if test="documentQueryParam.documentType != null and documentQueryParam.documentType != ''"> -->
            <!--     and d1.document_type = #{documentQueryParam.documentType} -->
            <!-- </if> -->
        </if>
    </select>


    <select id="findHistoryList" parameterType="com.example.demo.entity.Document" resultMap="DocumentResult">
        <include refid="selectDocumentVo"/>
        WHERE d1.item_no = #{document.itemNo}
        AND d1.sequence_no = #{document.sequenceNo}
        AND d1.document_type = #{document.documentType}
        AND d1.document_version &lt;&gt; #{document.documentVersion}
        <if test="document.materialNo == null">
            AND d1.material_no IS NULL
        </if>
        <if test="document.materialNo != null">
            AND d1.material_no = #{document.materialNo}
        </if>
    </select>


    <select id="findDocumentMore" parameterType="java.util.List" resultMap="DocumentResult">
        <include refid="selectDocumentVo"/>
         WHERE d1.id IN
        <foreach collection="ids" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>


    <select id="findDocumentListByINTE" resultMap="DocumentResult">
        <include refid="selectDocumentVo"/>
        where d1.id in (
        select max(d2.id)
        from document d2
        group by d2.item_no, d2.material_no, d2.document_type, d2.sequence_no
        )
        <if test="itemNo != null and itemNo != ''">
            and d1.item_no = #{itemNo}
        </if>
        <if test="documentTypeList != null and !documentTypeList.isEmpty()">
            and d1.document_type in
            <foreach collection="documentTypeList" item="documentType" open="(" separator="," close=")">
                #{documentType}
            </foreach>
        </if>
    </select>


    <select id="departConfirm"  parameterType="com.example.demo.entity.Document" resultType="java.lang.Integer">

        SELECT u.depart_id
        FROM document d1
        INNER JOIN user u ON d1.user_id = u.id
        where d1.id in(
            select max(d2.id)
            from document d2
            group by d2.item_no, d2.material_no, d2.document_type, d2.sequence_no
        )
        <if test="itemNo != null and itemNo != ''">
            and d1.item_no = #{itemNo}
        </if>
        <if test="materialNo!= null and materialNo != ''">
            and d1.material_no = #{materialNo}
        </if>
        LIMIT 1
    </select>



    <select id="findDocumentListByLikeINTE" resultMap="DocumentResult">
        <include refid="selectDocumentVo"/>
        where d1.id in(
        select max(d2.id)
        from document d2
        group by d2.item_no, d2.material_no, d2.document_type, d2.sequence_no
        )
        <if test="itemNo != null and itemNo != ''">
            and d1.item_no like CONCAT('%',#{itemNo}, '%')
        </if>
        <if test="documentTypeList != null and !documentTypeList.isEmpty()">
            and d1.document_type in
            <foreach collection="documentTypeList" item="documentType" open="(" separator="," close=")">
                #{documentType}
            </foreach>
        </if>
    </select>


</mapper>




