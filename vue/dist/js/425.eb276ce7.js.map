{"version":3,"file":"js/425.eb276ce7.js","mappings":"u7BAkTA,IAAIA,GAASC,EAAAA,EAAAA,MACTC,GAAgBD,EAAAA,EAAAA,MACpB,MAAAE,EAAe,CACbC,KAAM,UACNC,WAAY,CAAC,EACbC,OACE,MAAO,CACLC,WAAY,GACZC,KAAM,CAAC,EACPC,YAAY,CAAC,EACbC,SAAU,CACR,YAAe,GACf,YAAe,IAEjBC,YAAa,CAAC,EAEdC,WAAY,CAAC,EACbC,OAAQ,GAMRC,YAAa,EACbC,SAAU,GAEVC,eAAe,EACfC,YAAY,GAGZC,MAAO,EAEPC,SAAS,EAETC,eAAe,EAEfC,sBAAsB,EAEtBC,mBAAmB,EAEnBC,sBAAqB,EACrBC,SAAU,GACVC,SAAU,GAKVC,YAAa,GACbC,UAAW,GAEXC,iBAAkB,GAClBC,IAAI,GACJC,cAAc,GAGlB,EACAC,UACEC,KAAKC,MACP,EACAC,SAAU,CACRC,mBACE,MAAM,UAACC,EAAS,YAAEC,EAAW,YAAEC,GAAeN,KAAKxB,MAAQ,CAAC,EAC5D,OAAQ4B,GAAWG,SAAWF,GAAaE,SAAWD,CACxD,GAEFE,QAAS,CACPC,+BACE,GAAKT,KAAKH,IAAIa,OAOd,IAAK,MAAMC,KAAQX,KAAKF,cAAe,CACrC,MAAMc,EAAUC,OAAOC,OAAOC,eAAiB,IAAMF,OAAOC,OAAOE,gBAAkBL,EAAKM,YAAYC,QAAQL,OAAOC,OAAOC,eAAe,IAC3II,QAAQC,IAAIR,GACZ,MAAMS,EAAM,UAAYT,EAClBU,EAAOC,SAASC,cAAc,KACpCF,EAAKG,KAAOJ,EACZC,EAAKI,OAAS,SACdJ,EAAKK,SAAWN,EAAIO,MAAM,KAAKC,MAC/BP,EAAKQ,cACC,IAAIC,SAAQC,GAAWC,WAAWD,EAAS,MACnD,MAhBEE,EAAAA,EAAAA,IAAU,CACRC,QAAS,QACTC,KAAM,WAeZ,EAEAC,uBACQrC,KAAKH,IAAIa,OAOf4B,EAAAA,EAAAA,KAAa,uBAAwBtC,KAAKH,KAAK0C,MAAKC,IAC9CrB,QAAQC,IAAIoB,GACK,MAAbA,EAAIC,OACNP,EAAAA,EAAAA,IAAU,CACRC,QAAS,SACTC,KAAM,YAERpC,KAAK0C,UAAU1C,KAAKH,KAAK0C,MAAK,KAC5BvC,KAAKC,MAAM,MAGbiC,EAAAA,EAAAA,IAAU,CACRC,QAAS,SACTC,KAAM,SAGV,KAtBJF,EAAAA,EAAAA,IAAU,CACRC,QAAS,QACTC,KAAM,WAuBZ,EAGAO,sBAAsBC,GACpB5C,KAAKH,IAAM+C,EAAIC,KAAIC,GAAKA,EAAEC,KAC1B/C,KAAKF,cAAgB8C,EACrBzB,QAAQC,IAAI,sBAAsBpB,KAAKF,cACzC,EAGAW,oBACE,UAGQT,KAAKgD,MAAM,KAGjBV,EAAAA,EAAAA,KAAc,wBAAuBtC,KAAKhB,kBAAkBgB,KAAKf,cAAee,KAAKvB,aACnF8D,MAAKC,IACLrB,QAAQC,IAAIoB,GAOZxC,KAAKJ,iBAAmB4C,EAAIlE,KAAK2E,QACjCjD,KAAKb,SAAWqD,EAAIlE,KAAKY,KAAK,GAIlC,CAAE,MAAOgE,GACP/B,QAAQ+B,MAAMA,EAChB,CACF,EAECC,YAAYC,GACXpD,KAAKvB,YAAc4E,KAAKC,MAAMD,KAAKE,UAAUH,IAC7CpD,KAAKwD,cACLxD,KAAKT,sBAAuB,CAC9B,EAEAkE,aAAaL,GACX,MAAMxC,EAAUC,OAAOC,OAAOC,eAAiB,IAAMF,OAAOC,OAAOE,gBAAkBoC,EAAInC,YAAYC,QAAQL,OAAOC,OAAOC,eAAe,IAC1II,QAAQC,IAAIR,GACZ,MAAMS,EAAM,UAAYT,EAClBU,EAAOC,SAASC,cAAc,KACpCF,EAAKG,KAAOJ,EACZC,EAAKK,SAAWN,EAAIO,MAAM,KAAKC,MAC/BP,EAAKQ,OACP,EAEA4B,cAAcN,GACZpD,KAAKxB,KAAO6E,KAAKC,MAAMD,KAAKE,UAAUH,IACtCpD,KAAKN,YAAcM,KAAKxB,KAAKyC,YAC7BjB,KAAKX,sBAAuB,EAC5BW,KAAK2D,WAAU,KACb3D,KAAK4D,MAAM,iBAAiBC,YAAY,GAE5C,EAEAC,uBACE9D,KAAKJ,iBAAmB,GACxBI,KAAKT,sBAAuB,CAC9B,EAEAwE,0BAEE/D,KAAKgE,aACP,EAEAC,wBAEEjE,KAAKkE,QACP,EACAC,oBAEEnE,KAAKkE,QACP,EACAE,WAAWC,GACTrE,KAAKR,SAAW,IAAI8E,SACpB,IAAIC,EAASlB,KAAKE,UAAUvD,KAAKxB,MACjCwB,KAAKR,SAASgF,OAAO,UAAWD,GAChCvE,KAAKR,SAASgF,OAAO,OAAQH,EAAO1D,MACpC8D,EAAAA,EAAAA,QAAc,CACZC,OAAQ,OACRrD,IAAK,UAAYR,OAAOC,OAAOC,eAAiB,iCAChD4D,QAAS,CACP,eAAgB,sBAChB,MAAStB,KAAKC,MAAMsB,eAAeC,QAAQ,WAE7CvG,KAAM0B,KAAKR,WACV+C,MAAKuC,IACN,IAAItC,EAAMsC,EAASxG,KACF,MAAbkE,EAAIC,QACNP,EAAAA,EAAAA,IAAU,CACRC,QAAS,OACTC,KAAM,YAQRpC,KAAKxB,KAAKuG,eAAiBvC,EAAIlE,KAAK0G,WACpChF,KAAKxB,KAAKyC,YAAcuB,EAAIlE,KAAK2G,SACnC,IACCC,OAAM,QAEX,EACAC,qBACEjH,EAAckH,MAAMC,QACtB,EACAC,WAAWjB,GACTrE,KAAKR,SAAW,IAAI8E,SACpB,IAAIC,EAASlB,KAAKE,UAAUvD,KAAKxB,MACjCwB,KAAKR,SAASgF,OAAO,UAAWD,GAChCvE,KAAKR,SAASgF,OAAO,OAAQH,EAAO1D,MACpC8D,EAAAA,EAAAA,QAAc,CACZC,OAAQ,OACRrD,IAAK,UAAYR,OAAOC,OAAOC,eAAiB,iCAChD4D,QAAS,CACP,eAAgB,sBAChB,MAAStB,KAAKC,MAAMsB,eAAeC,QAAQ,WAE7CvG,KAAM0B,KAAKR,WACV+C,MAAKuC,IACN,IAAItC,EAAMsC,EAASxG,KACF,MAAbkE,EAAIC,QACNP,EAAAA,EAAAA,IAAU,CACRC,QAAS,OACTC,KAAM,YAGRpC,KAAKxB,KAAKuG,eAAiB,MAC3B/E,KAAKxB,KAAKyC,YAAcuB,EAAIlE,KAC5B0B,KAAKN,YAAcM,KAAKxB,KAAKyC,YAC/B,IACCiE,OAAM,QAEX,EAEAK,qBACEvH,EAAOoH,MAAMC,QACf,EAEAG,cAEE,MAAMlH,EAAO0B,KAAKL,UAEZ8F,EAAKC,EAAAA,GAAAA,cAAyBpH,GAC9BqH,EAAKD,EAAAA,GAAAA,WACXA,EAAAA,GAAAA,kBAA6BC,EAAIF,EAAI,UAErC,MAAMG,EAAW,YACXC,EAAO,IAAIC,KAAK,CAACJ,EAAAA,GAAWC,EAAI,CAACI,SAAU,OAAQ3D,KAAM,WAAY,CAACA,KAAM,6BAClF4D,EAAAA,OAAiBH,EAAMD,EACzB,EACAK,eAAe7D,GACb,OAAQA,GACN,KAAK,EACH,MAAO,OACT,KAAK,EACH,MAAO,OACT,KAAK,EACH,MAAO,MACT,KAAK,EACH,MAAO,QACT,QACE,MAAO,GAEb,EAEA8D,mBAAmB1D,GACjBxC,KAAKxB,KAAKyC,YAAcuB,EAAIlE,IAC9B,EACA0E,MAAMmD,GACJ,OAAO,IAAIpE,SAAQC,GAAWC,WAAWD,EAASmE,IACpD,EACA1F,aACE,UAGQT,KAAKgD,MAAM,KAGjBV,EAAAA,EAAAA,KAAc,YAAWtC,KAAKlB,eAAekB,KAAKjB,WAAYsE,KAAKC,MAAMD,KAAKE,UAAUvD,KAAKpB,cAC3F2D,MAAKC,IACLrB,QAAQC,IAAIoB,GAOZxC,KAAKL,UAAY6C,EAAIlE,KAAK2E,QAC1BjD,KAAKd,MAAQsD,EAAIlE,KAAKY,KAAK,GAI/B,CAAE,MAAOgE,GACP/B,QAAQ+B,MAAMA,EAChB,CAEF,EAEAkD,QACEpG,KAAKpB,WAAa,CAAC,EACnBoB,KAAK4D,MAAM,mBAAmByC,aAChC,EACAC,MAEEtG,KAAKZ,eAAgB,EACrBY,KAAKxB,KAAO,CAAC,EAEbwB,KAAK2D,WAAU,KACb3D,KAAK4D,MAAM,UAAUC,YAAY,GAErC,EAEA0C,SAASC,GACPrF,QAAQC,IAAI,OAASoF,GACrBlE,EAAAA,EAAAA,KAAa,wBAAyB,CAACmE,eAAgBD,IAAOjE,MAAKC,IAC7DrB,QAAQC,IAAIoB,GACK,MAAbA,EAAIC,MACNP,EAAAA,EAAAA,IAAU,CACRC,QAAS,cACTC,KAAM,aAGRF,EAAAA,EAAAA,IAAU,CACRC,QAAS,cACTC,KAAM,SAGV,GAGR,EAEAM,UAAU7C,GACR,OAAOyC,EAAAA,EAAAA,KAAa,yBAA0BtC,KAAKH,KAAK0C,MAAKC,IACvDrB,QAAQC,IAAIoB,GACK,MAAbA,EAAIC,MACNP,EAAAA,EAAAA,IAAU,CACRC,QAAS,cACTC,KAAM,aAGRF,EAAAA,EAAAA,IAAU,CACRC,QAAS,cACTC,KAAM,SAGV,GAGR,EAGAsE,cAIE,GAFA1G,KAAKxB,KAAK8B,YAAcqG,SAAS3G,KAAKxB,KAAK8B,aAEvCN,KAAKxB,KAAKuE,GAAI,CAEhB,MAAM6D,EAAa,CACjBxG,UAAW,OACXE,YAAa,OACbD,YAAa,OACbY,YAAa,QAET4F,EAAiBC,OAAOC,KAAKH,GACnC,IAAII,GAAc,EACdC,EAAgB,GACpB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAAenG,OAAQwG,IAAK,CAC9C,MAAMC,EAAQN,EAAeK,GACxBlH,KAAKxB,KAAK2I,KACbH,GAAc,EACdC,EAAcG,KAAKR,EAAWO,IAElC,CACIH,EACF1E,EAAAA,EAAAA,KAAa,WAAYtC,KAAKxB,MAAM+D,MAAKC,IAEtB,MAAbA,EAAIC,OACNP,EAAAA,EAAAA,IAAU,CACRC,QAAS,OACTC,KAAM,YAERpC,KAAKC,SAELiC,EAAAA,EAAAA,IAAU,CACRC,QAASK,EAAI6E,IACbjF,KAAM,SAGV,KAGFF,EAAAA,EAAAA,IAAU,CACRC,QAAU,UAAS8E,EAAcK,KAAK,QACtClF,KAAM,WAGZ,CACApC,KAAKX,sBAAuB,CAC9B,EACAkI,OAIE,GAFAvH,KAAKxB,KAAK8B,YAAcqG,SAAS3G,KAAKxB,KAAK8B,aAEvCN,KAAKxB,KAAKuE,GAAI,CAChB5B,QAAQC,IAAI,QAAUpB,KAAKxB,KAAKyC,aAChC,MAAM2F,EAAa,CACjBxG,UAAW,OACXE,YAAa,OACbD,YAAa,OACbY,YAAa,QAET4F,EAAiBC,OAAOC,KAAKH,GACnC,IAAII,GAAc,EACdC,EAAgB,GACpB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAAenG,OAAQwG,IAAK,CAC9C,MAAMC,EAAQN,EAAeK,GACxBlH,KAAKxB,KAAK2I,KACbH,GAAc,EACdC,EAAcG,KAAKR,EAAWO,IAElC,CACIH,GACF7F,QAAQC,IAAI,SAAWpB,KAAKxB,KAAKyC,aAGjCqB,EAAAA,EAAAA,KAAa,gBAAiB,CAACkF,YAAaxH,KAAKtB,SAAU+I,QAASzH,KAAKxB,OAAO+D,MAAKC,IAClE,MAAbA,EAAIC,OACNP,EAAAA,EAAAA,IAAU,CACRC,QAAS,OACTC,KAAM,YAERpC,KAAKC,SAELiC,EAAAA,EAAAA,IAAU,CACRC,QAASK,EAAI6E,IACbjF,KAAM,SAGV,MAGFF,EAAAA,EAAAA,IAAU,CACRC,QAAU,UAAS8E,EAAcK,KAAK,QACtClF,KAAM,YAGVpC,KAAKV,mBAAoB,CAE3B,KAAO,CAEL,MAAMsH,EAAa,CACjBxG,UAAW,OACXE,YAAa,OACbD,YAAa,OACbY,YAAa,QAET4F,EAAiBC,OAAOC,KAAKH,GACnC,IAAII,GAAc,EACdC,EAAgB,GACpB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAAenG,OAAQwG,IAAK,CAC9C,MAAMC,EAAQN,EAAeK,GACxBlH,KAAKxB,KAAK2I,KACbH,GAAc,EACdC,EAAcG,KAAKR,EAAWO,IAElC,CACIH,EAEF1E,EAAAA,EAAAA,KAAa,WAAYtC,KAAKxB,MAAM+D,MAAKC,IACvCrB,QAAQC,IAAI,QACZD,QAAQC,IAAI,YAAcpB,KAAKxB,KAAKyC,aACpCE,QAAQC,IAAI,OAASoB,GACJ,MAAbA,EAAIC,OACNP,EAAAA,EAAAA,IAAU,CACRC,QAAS,OACTC,KAAM,YAERpC,KAAKC,SAELkB,QAAQC,IAAI,YAAcpB,KAAKxB,OAC/B0D,EAAAA,EAAAA,IAAU,CACRC,QAASK,EAAI6E,IACbjF,KAAM,UAGRjB,QAAQC,IAAI,aAAepB,KAAKxB,KAAKyC,aAErCE,QAAQC,IAAIpB,KAAKN,aACjBM,KAAKuG,SAASvG,KAAKxB,KAAKyC,aAC1B,KAGFiB,EAAAA,EAAAA,IAAU,CACRC,QAAU,UAAS8E,EAAcK,KAAK,QACtClF,KAAM,YAGVpC,KAAKZ,eAAgB,CACvB,CAGF,EAEA4E,cAEMhE,KAAKxB,KAAKyC,cAAgBjB,KAAKN,cACjCyB,QAAQC,IAAI,yBAA2BpB,KAAKxB,KAAKyC,aAGjDjB,KAAKuG,SAASvG,KAAKxB,KAAKyC,cAI1BjB,KAAKZ,eAAgB,CACvB,EACAsI,aAEE1H,KAAKV,mBAAoB,EAEzBU,KAAKtB,SAAS2B,YAAc,GAC5BL,KAAKtB,SAAS4B,YAAc,EAC9B,EAEA4D,SAE2B,KAArBlE,KAAKN,cAEPyB,QAAQC,IAAI,oBAAsBpB,KAAKN,aACvCM,KAAKuG,SAASvG,KAAKN,cAIrBM,KAAKZ,eAAgB,CACvB,EACAuI,WAAWvE,GACTpD,KAAKxB,KAAO6E,KAAKC,MAAMD,KAAKE,UAAUH,IACtCjC,QAAQC,IAAI,YAAapB,KAAKxB,MAG9BwB,KAAKtB,SAAS4B,YAAcN,KAAKxB,KAAK8B,YACtCN,KAAKtB,SAAS2B,YAAcL,KAAKxB,KAAK6B,YAEtCL,KAAKV,mBAAoB,CAE3B,EACAsI,YAAYxE,GACVpD,KAAKxB,KAAO6E,KAAKC,MAAMD,KAAKE,UAAUH,IAEtCd,EAAAA,EAAAA,IAAY,YAActC,KAAKxB,KAAKuE,IAAIR,MAAKC,IAC3CrB,QAAQC,IAAIoB,GACK,MAAbA,EAAIC,MAGNzC,KAAKzB,WAAa,UAAYiE,EAAIlE,KAAK2C,YACvCE,QAAQC,IAAIpB,KAAKzB,YACjBsC,OAAOgH,KAAK,2CAA6CC,mBAAmBC,EAAAA,GAAAA,OAAc/H,KAAKzB,gBAE/F2D,EAAAA,EAAAA,IAAU,CACRC,QAAS,OACTC,KAAM,SAEV,GAGJ,EACA4F,mBACEhI,KAAKC,MACP,EAEAgI,sBACEjI,KAAKC,MACP,EACAiI,sBACElI,KAAKwD,aACP,EACA2E,yBACEnI,KAAKwD,aACP,EAEA4E,aAAarF,EAAI9B,GACfE,QAAQC,IAAI2B,GACZT,EAAAA,EAAAA,UAAe,YAAcS,GAAIR,MAAKC,IACpCrB,QAAQC,IAAIoB,GACK,MAAbA,EAAIC,OACNP,EAAAA,EAAAA,IAAU,CACRC,QAAS,OACTC,KAAM,YAGRjB,QAAQC,IAAI,cAAgBH,GAC5BjB,KAAKuG,SAAStF,KAEdiB,EAAAA,EAAAA,IAAU,CACRC,QAAS,OACTC,KAAM,UAGVpC,KAAKC,MAAM,GAEf,I,6pXC55BJ,MAAMoI,EAAc,EAEpB,O","sources":["webpack://springboot-vue-demo/./src/views/Drawing.vue","webpack://springboot-vue-demo/./src/views/Drawing.vue?f2f4"],"sourcesContent":["<template #default=\"scope\">\r\n  <div style=\"padding: 10px;\">\r\n\r\n    <!--功能区域-->\r\n    <div style=\"margin: 10px;padding: 0px\">\r\n      <el-button color=\"#E0BF75\" @click=\"add\">新增</el-button>\r\n      <el-button color=\"#958CDD\" @click=\"exportExcel\">导出</el-button>\r\n      <el-button color=\"#FC9DA9\" @click=\"load\">刷新</el-button>\r\n    </div>\r\n    <!--搜索区域-->\r\n    <div style=\"margin: 10px ; padding: 0px\">\r\n      <el-form :inline=\"true\" :model=\"formInline\" class=\"demo-form-inline\" ref=\"resetformInline\">\r\n        <el-form-item label=\"料号\">\r\n          <el-input v-model=\"formInline.productNo\" placeholder=\"please input\" clearable/>\r\n        </el-form-item>\r\n        <el-form-item label=\"图纸名称\">\r\n          <el-input v-model=\"formInline.drawingName\" placeholder=\"Please input\"/>\r\n        </el-form-item>\r\n        <el-form-item label=\"图纸类型\">\r\n          <el-select v-model=\"formInline.drawingType\" placeholder=\"Please select\">\r\n            <el-option label=\"材料清单\" value=\"1\"/>\r\n            <el-option label=\"定屏图纸\" value=\"2\"/>\r\n            <el-option label=\"配线图\" value=\"3\"/>\r\n            <el-option label=\"技术交底单\" value=\"4\"/>\r\n          </el-select>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"存储路径\">\r\n          <el-input v-model=\"formInline.drawingPath\" placeholder=\"Please input\"/>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button color=\"#E0BF75\" style=\"margin-left: 5px\" :icon=\"Search\" @click=\"load\">查询</el-button>\r\n          <el-button color=\"#E0BF75\" style=\"margin-left: 5px\" :icon=\"RefreshLeft\" @click=\"reset\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n    <!--批量操作按钮区域-->\r\n    <div style=\"margin: 10px ; padding: 0px\">\r\n      <el-button  type=\"primary\" @click=\"handleDownLoadDrawings\">批量下载</el-button>\r\n      <el-popconfirm title=\"Are you sure to delete this?\"\r\n                     @confirm=\"handleDeleteDrawings\">\r\n        <template #reference>\r\n          <el-button type=\"danger\" >批量删除</el-button>\r\n        </template>\r\n      </el-popconfirm>\r\n    </div>\r\n    <!--内容区域-->\r\n    <el-table\r\n        :data=\"tableData\"\r\n        style=\"width: 100%\"\r\n        border\r\n        class=\"table\"\r\n        :stripe=\"false\"\r\n        @selection-change=\"handleSelectionChange\"\r\n    >\r\n      <el-table-column type=\"selection\" width=\"55\" />\r\n      <el-table-column prop=\"id\" label=\"ID\" sortable/>\r\n      <el-table-column prop=\"productNo\" label=\"产品料号\"/>\r\n      <el-table-column prop=\"itemNo\" label=\"项目编号\"/>\r\n      <el-table-column prop=\"drawingVersion\" label=\"文件版本\"/>\r\n      <el-table-column prop=\"drawingName\" label=\"图纸名称\"/>\r\n      <el-table-column prop=\"drawingType\" label=\"图纸类型\">\r\n        <template #default=\"scope\">\r\n          {{ getDrawingType(scope.row.drawingType) }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"drawingPath\" label=\"存储路径\"/>\r\n      <el-table-column prop=\"createTime\" label=\"创建时间\"/>\r\n      <el-table-column prop=\"updateTime\" label=\"更新时间\"/>\r\n      <el-table-column fixed=\"right\" label=\"操作\" width=\"220\">\r\n        <template #default=\"scope\">\r\n          <div class=\"btn-group\">\r\n            <div class=\"col\">\r\n              <el-button size=\"small\" @click=\"handleEdit(scope.row)\"\r\n              >编辑\r\n              </el-button\r\n              >\r\n              <el-button size=\"small\" @click=\"previewFile(scope.row)\"\r\n              >预览\r\n              </el-button\r\n              >\r\n              <el-button size=\"small\" @click=\"downloadFile(scope.row)\">下载文件</el-button>\r\n            </div>\r\n            <div class=\"col\">\r\n              <el-button size=\"small\" @click=\"updateVersion(scope.row)\"\r\n              >更新\r\n              </el-button\r\n              >\r\n              <el-popconfirm title=\"Are you sure to delete this?\"\r\n                             @confirm=\"handleDelete(scope.row.id,scope.row.drawingPath)\">\r\n                <template #reference>\r\n                  <el-button type=\"danger\" size=\"small\">删除</el-button>\r\n                </template>\r\n              </el-popconfirm>\r\n              <el-button size=\"small\" @click=\"showHistory(scope.row)\">历史版本</el-button>\r\n            </div>\r\n          </div>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    <!--分页条-->\r\n    <div style=\"margin: 10px ; padding: 0px\">\r\n      <el-pagination\r\n          v-model:current-page=\"currentPage\"\r\n          v-model:page-size=\"pageSize\"\r\n          :page-sizes=\"[5, 10, 20, 40]\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"total\"\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n      />\r\n    </div>\r\n    <!--  新增对话框 -->\r\n    <el-dialog v-model=\"dialogVisible\" title=\"Tips\" width=\"50%\" :before-close=\"handleCloseDialog\">\r\n      <el-form :model=\"form\" label-width=\"120px\">\r\n        <el-form-item label=\"产品料号\">\r\n          <el-input v-model=\"form.productNo\" style=\"width: 80%\"/>\r\n        </el-form-item>\r\n        <el-form-item label=\"项目编号\">\r\n          <el-input v-model=\"form.itemNo\" style=\"width: 80%\"/>\r\n        </el-form-item>\r\n        <el-form-item label=\"图纸名称\">\r\n          <el-input v-model=\"form.drawingName\" style=\"width: 80%\"/>\r\n        </el-form-item>\r\n        <el-form-item label=\"图纸类型\">\r\n          <div class=\"radio-group-container\">\r\n            <el-radio-group v-model=\"form.drawingType\">\r\n              <el-radio :label=\"1\">材料清单</el-radio>\r\n              <el-radio :label=\"2\">定屏图纸</el-radio>\r\n              <el-radio :label=\"3\">配线图</el-radio>\r\n              <el-radio :label=\"4\">技术交底单</el-radio>\r\n            </el-radio-group>\r\n          </div>\r\n        </el-form-item>\r\n        <el-form-item label=\"选择文件\">\r\n          <el-upload ref=\"upload\"\r\n                     :auto-upload=\"false\"\r\n                     :http-request=\"uploadFile\"\r\n                     :disabled=\"isDisabledUpload\">\r\n            <template #trigger>\r\n              <el-button type=\"primary\">选择文件</el-button>\r\n            </template>\r\n            <template #tip>\r\n              <div class=\"el-upload__tip\">\r\n                Any files with a size less than 10MB.\r\n              </div>\r\n            </template>\r\n\r\n          </el-upload>\r\n        </el-form-item>\r\n        <el-form-item label=\"上传文件\">\r\n          <div>\r\n            <el-button type=\"primary\" @click=\"handleBeforeUpload\">点击上传</el-button>\r\n          </div>\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n      <span class=\"dialog-footer\">\r\n        <el-button @click=\"cancel\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"save\">\r\n          确认\r\n        </el-button>\r\n      </span>\r\n      </template>\r\n    </el-dialog>\r\n\r\n    <!--  更新文件对话框 -->\r\n    <el-dialog v-model=\"updatedDialogVisible\" title=\"Tips\" width=\"50%\" :before-close=\"handleCloseUpdateDialog\">\r\n      <el-form :model=\"form\" label-width=\"120px\">\r\n        <el-form-item label=\"选择文件\">\r\n          <el-upload ref=\"updateDrawing\"\r\n                     :auto-upload=\"false\"\r\n                     :http-request=\"updateFile\">\r\n            <template #trigger>\r\n              <el-button type=\"primary\">选择文件</el-button>\r\n            </template>\r\n            <template #tip>\r\n              <div class=\"el-upload__tip\">\r\n                Any files with a size less than 10MB.\r\n              </div>\r\n            </template>\r\n          </el-upload>\r\n        </el-form-item>\r\n        <el-form-item label=\"上传文件\">\r\n          <div>\r\n            <el-button type=\"primary\" @click=\"handleBeforeUpdate\">点击上传</el-button>\r\n          </div>\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n      <span class=\"dialog-footer\">\r\n        <el-button @click=\"cancelUpate\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"saveDrawing\">\r\n          确认\r\n        </el-button>\r\n      </span>\r\n      </template>\r\n    </el-dialog>\r\n\r\n    <!--  编辑对话框 -->\r\n    <el-dialog v-model=\"editDialogVisible\" title=\"Tips\" width=\"50%\" :before-close=\"handleCloseEditDialog\">\r\n      <el-form :model=\"form\" label-width=\"120px\">\r\n        <el-form-item label=\"产品料号\">\r\n          <el-input v-model=\"form.productNo\" style=\"width: 80%\" :disabled=\"true\"/>\r\n        </el-form-item>\r\n        <el-form-item label=\"项目编号\">\r\n          <el-input v-model=\"form.itemNo\" style=\"width: 80%\" :disabled=\"true\"/>\r\n        </el-form-item>\r\n        <el-form-item label=\"图纸名称\">\r\n          <el-input v-model=\"form.drawingName\" style=\"width: 80%\"/>\r\n        </el-form-item>\r\n        <el-form-item label=\"图纸类型\">\r\n          <div class=\"radio-group-container\">\r\n            <el-radio-group v-model=\"form.drawingType\">\r\n              <el-radio :label=\"1\">材料清单</el-radio>\r\n              <el-radio :label=\"2\">定屏图纸</el-radio>\r\n              <el-radio :label=\"3\">配线图</el-radio>\r\n              <el-radio :label=\"4\">技术交底单</el-radio>\r\n            </el-radio-group>\r\n          </div>\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n      <span class=\"dialog-footer\">\r\n        <el-button @click=\"cancelEdit\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"save\">\r\n          确认\r\n        </el-button>\r\n      </span>\r\n      </template>\r\n    </el-dialog>\r\n\r\n    <!--查看历史版本对话框-->\r\n    <el-dialog v-model=\"historyDialogVisible\" title=\"Tips\" width=\"80%\" :close-on-click-modal=\"false\" :before-close=\"handleDialogHisClose\">\r\n      <el-table\r\n          :data=\"historyTableData\"\r\n          style=\"width: 100%\"\r\n          border\r\n          class=\"table\"\r\n          :stripe=\"false\"\r\n      >\r\n        <el-table-column prop=\"id\" label=\"ID\" sortable/>\r\n        <el-table-column prop=\"productNo\" label=\"产品料号\"/>\r\n        <el-table-column prop=\"itemNo\" label=\"项目编号\"/>\r\n        <el-table-column prop=\"drawingVersion\" label=\"文件版本\"/>\r\n        <el-table-column prop=\"drawingName\" label=\"图纸名称\"/>\r\n        <el-table-column prop=\"drawingType\" label=\"图纸类型\">\r\n          <template #default=\"scope\">\r\n            {{ getDrawingType(scope.row.drawingType) }}\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"drawingPath\" label=\"存储路径\"/>\r\n        <el-table-column prop=\"createTime\" label=\"创建时间\"/>\r\n        <el-table-column prop=\"updateTime\" label=\"更新时间\"/>\r\n        <el-table-column fixed=\"right\" label=\"操作\" width=\"220\">\r\n          <template #default=\"scope\">\r\n            <div class=\"btn-group\">\r\n              <div class=\"col\">\r\n                <el-button size=\"small\" @click=\"previewFile(scope.row)\"\r\n                >预览\r\n                </el-button\r\n                >\r\n                <el-button size=\"small\" @click=\"downloadFile(scope.row)\">下载文件</el-button>\r\n              </div>\r\n              <div class=\"col\">\r\n                <el-popconfirm title=\"Are you sure to delete this?\"\r\n                               @confirm=\"handleDelete(scope.row.id,scope.row.drawingPath)\">\r\n                  <template #reference>\r\n                    <el-button type=\"danger\" size=\"small\">删除</el-button>\r\n                  </template>\r\n                </el-popconfirm>\r\n              </div>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <!--分页条-->\r\n      <div style=\"margin: 10px ; padding: 0px\">\r\n        <el-pagination\r\n            v-model:current-page=\"currentHisPage\"\r\n            v-model:page-size=\"pageHisSize\"\r\n            :page-sizes=\"[5, 10, 20, 40]\"\r\n            layout=\"total, sizes, prev, pager, next, jumper\"\r\n            :total=\"totalHis\"\r\n            @size-change=\"handleHisSizeChange\"\r\n            @current-change=\"handleHisCurrentChange\"\r\n        />\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n<script setup>\r\nimport {RefreshLeft, Search} from '@element-plus/icons-vue';\r\n\r\n</script>\r\n\r\n<script>\r\n\r\nimport request from \"@/utils/request\";\r\nimport {ElMessage} from \"element-plus\";\r\nimport * as XLSX from 'xlsx';\r\nimport * as FileSaver from 'file-saver';\r\nimport {Base64} from \"js-base64\";\r\nimport axios from \"axios\";\r\nimport {ref} from \"vue\";\r\n\r\nlet upload = ref();\r\nlet updateDrawing = ref();\r\nexport default {\r\n  name: 'Drawing',\r\n  components: {},\r\n  data() {\r\n    return {\r\n      previewUrl: '',\r\n      form: {},\r\n      historyForm:{},\r\n      editForm: {\r\n        \"drawingName\": '',\r\n        \"drawingType\": ''\r\n      },\r\n      previewForm: {},\r\n      //搜索栏表单\r\n      formInline: {},\r\n      search: '',\r\n\r\n\r\n      // //文件存储的真实路径 生产环境时应视需求修改\r\n      // file_location:'/files/',\r\n\r\n      currentPage: 1,\r\n      pageSize: 10,\r\n\r\n      currentHisPage:1,\r\n      pageHisSize:10,\r\n\r\n      //总条数\r\n      total: 0,\r\n\r\n      totalHis:0,\r\n      // 新增数据的对话框显示控制\r\n      dialogVisible: false,\r\n      //更新文件版本对话框显示控制\r\n      updatedDialogVisible: false,\r\n      //修改文件信息对话框显示控制\r\n      editDialogVisible: false,\r\n      //查看历史版本对话框显示控制\r\n      historyDialogVisible:false,\r\n      fileData: '', // 表单数据+文件\r\n      EditData: '',//编辑更新数据 新数据行+编辑行\r\n      // importData:form,\r\n      // headers:{\r\n      //   token: JSON.parse(sessionStorage.getItem('token'))\r\n      // },\r\n      oldFilePath: '',\r\n      tableData: [],\r\n\r\n      historyTableData: [],\r\n      ids:[],\r\n      selectedFiles:[],\r\n      // filesUploadUrl:\"http://\" + window.server.filesUploadUrl + \":9090/files/uploadDrawingFiles\"\r\n    }\r\n  },\r\n  created() {\r\n    this.load()\r\n  },\r\n  computed: {\r\n    isDisabledUpload() {\r\n      const {productNo, drawingName, drawingType} = this.form || {}\r\n      return !productNo?.trim() || !drawingName?.trim() || !drawingType\r\n    }\r\n  },\r\n  methods: {\r\n    async handleDownLoadDrawings() {\r\n      if (!this.ids.length) {\r\n        ElMessage({\r\n          message: '请选择数据',\r\n          type: 'warning',\r\n        })\r\n        return\r\n      }\r\n      for (const file of this.selectedFiles) {\r\n        const url_raw = window.server.filesUploadUrl + \":\" + window.server.filesUploadPort + file.drawingPath.replace(window.server.filesUploadUrl,\"\");\r\n        console.log(url_raw)\r\n        const url = \"http://\" + url_raw;\r\n        const link = document.createElement('a');\r\n        link.href = url;\r\n        link.target = \"_blank\";\r\n        link.download = url.split('/').pop(); // 获取文件名\r\n        link.click();\r\n        await new Promise(resolve => setTimeout(resolve, 1000)); // 等待1s\r\n      }\r\n    },\r\n    //批量删除方法\r\n    handleDeleteDrawings(){\r\n      if (! this.ids.length){\r\n        ElMessage({\r\n          message: '请选择数据',\r\n          type: 'warning',\r\n        })\r\n        return\r\n      }\r\n      request.post(\"/drawing/deleteBatch\", this.ids).then(res => {\r\n            console.log(res);\r\n            if (res.code === '0') {\r\n              ElMessage({\r\n                message: '批量删除成功',\r\n                type: 'success',\r\n              })\r\n              this.del_files(this.ids).then(() => {  // 等待删除操作完成再执行load()方法\r\n                this.load(); // 更新表单数据\r\n              });\r\n            } else {\r\n              ElMessage({\r\n                message: '批量删除失败',\r\n                type: 'error',\r\n                //\r\n              })\r\n            }\r\n          }\r\n      )\r\n    },\r\n\r\n    //多选栏选择变化\r\n    handleSelectionChange(val){\r\n      this.ids = val.map(v => v.id)\r\n      this.selectedFiles = val\r\n      console.log(\"this.selectedFiles:\"+this.selectedFiles)\r\n    },\r\n\r\n\r\n    async historyLoad(){\r\n      try {\r\n\r\n        //延迟执行\r\n        await this.delay(1000);\r\n\r\n        // const url = \"/drawing/\" + this.currentPage + \"/\" + this.pageSize;\r\n        request.post(`/drawing/historyList/${this.currentHisPage}/${this.pageHisSize}`, this.historyForm\r\n        ).then(res => {\r\n          console.log(res);\r\n          // this.tableData = res.data.records.map(record => {\r\n          //   const filePathArray = record.drawingPath.split('/');\r\n          //   const fileName = filePathArray[filePathArray.length - 1].replace(/^[^_]+_/, '');\r\n          //   const result = filePathArray.slice(3, filePathArray.length - 1).concat(fileName).join('/');\r\n          //   return { ...record, drawingPath: result };\r\n          // });\r\n          this.historyTableData = res.data.records;\r\n          this.totalHis = res.data.total;\r\n\r\n\r\n        })\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n    },\r\n    //展示历史版本数据对话框点击事件\r\n     showHistory(row){\r\n      this.historyForm = JSON.parse(JSON.stringify(row));\r\n      this.historyLoad();\r\n      this.historyDialogVisible = true;\r\n    },\r\n    //文件下载\r\n    downloadFile(row) {\r\n      const url_raw = window.server.filesUploadUrl + \":\" + window.server.filesUploadPort + row.drawingPath.replace(window.server.filesUploadUrl,\"\");\r\n      console.log(url_raw)\r\n      const url = \"http://\" + url_raw;\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.download = url.split('/').pop(); // 获取文件名\r\n      link.click();\r\n    },\r\n    //更新文件版本按钮\r\n    updateVersion(row) {\r\n      this.form = JSON.parse(JSON.stringify(row));\r\n      this.oldFilePath = this.form.drawingPath;\r\n      this.updatedDialogVisible = true;\r\n      this.$nextTick(() => {\r\n        this.$refs[\"updateDrawing\"].clearFiles();\r\n      })\r\n    },\r\n\r\n    handleDialogHisClose(){\r\n      this.historyTableData = [];\r\n      this.historyDialogVisible = false;\r\n    },\r\n\r\n    handleCloseUpdateDialog() {\r\n      // 调用 cancel 方法\r\n      this.cancelUpate();\r\n    },\r\n    //关闭窗口的时候和cancel的时候一样 都要删除那些没有保存的文件\r\n    handleCloseEditDialog() {\r\n      // 调用 cancel 方法\r\n      this.cancel();\r\n    },\r\n    handleCloseDialog() {\r\n      // 调用 cancel 方法\r\n      this.cancel();\r\n    },\r\n    updateFile(params) {\r\n      this.fileData = new FormData()\r\n      let string = JSON.stringify(this.form)\r\n      this.fileData.append('drawing', string)\r\n      this.fileData.append(\"file\", params.file) // append增加数据\r\n      axios.request({\r\n        method: 'post',\r\n        url: 'http://' + window.server.filesUploadUrl + ':9090/files/updateDrawingFiles',\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n          'token': JSON.parse(sessionStorage.getItem('token'))\r\n        },\r\n        data: this.fileData\r\n      }).then(response => {\r\n        let res = response.data;\r\n        if (res.code === '0') {\r\n          ElMessage({\r\n            message: '更新成功',\r\n            type: 'success',\r\n          })\r\n          //如果是新增的文件 则默认其版本为A01\r\n          // this.form.drawingVersion = \"A01\";\r\n          // this.form.drawingVersion = res.version;\r\n          // this.form.drawingPath = res.data;\r\n\r\n          // 从返回结果中获取filePath和newVersion\r\n          this.form.drawingVersion = res.data.newVersion;\r\n          this.form.drawingPath = res.data.filePath;\r\n        }\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    handleBeforeUpdate() {\r\n      updateDrawing.value.submit()\r\n    },\r\n    uploadFile(params) {\r\n      this.fileData = new FormData()\r\n      let string = JSON.stringify(this.form)\r\n      this.fileData.append('drawing', string)\r\n      this.fileData.append(\"file\", params.file) // append增加数据\r\n      axios.request({\r\n        method: 'post',\r\n        url: 'http://' + window.server.filesUploadUrl + ':9090/files/uploadDrawingFiles',\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n          'token': JSON.parse(sessionStorage.getItem('token'))\r\n        },\r\n        data: this.fileData\r\n      }).then(response => {\r\n        let res = response.data;\r\n        if (res.code === '0') {\r\n          ElMessage({\r\n            message: '上传成功',\r\n            type: 'success',\r\n          })\r\n          //如果是新增的文件 则默认其版本为A01\r\n          this.form.drawingVersion = \"A01\";\r\n          this.form.drawingPath = res.data;\r\n          this.oldFilePath = this.form.drawingPath;\r\n        }\r\n      }).catch(() => {\r\n      })\r\n    },\r\n\r\n    handleBeforeUpload() {\r\n      upload.value.submit()\r\n    },\r\n\r\n    exportExcel() {\r\n      // 获取当前查询结果的数据\r\n      const data = this.tableData;\r\n      // 转换为Excel文件格式\r\n      const ws = XLSX.utils.json_to_sheet(data);\r\n      const wb = XLSX.utils.book_new();\r\n      XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\r\n      // 保存文件\r\n      const fileName = '图纸数据.xlsx';\r\n      const blob = new Blob([XLSX.write(wb, {bookType: 'xlsx', type: 'array'})], {type: 'application/octet-stream'});\r\n      FileSaver.saveAs(blob, fileName);\r\n    },\r\n    getDrawingType(type) {\r\n      switch (type) {\r\n        case 1:\r\n          return '材料清单'\r\n        case 2:\r\n          return '定屏图纸'\r\n        case 3:\r\n          return '配线图'\r\n        case 4:\r\n          return '技术交底单'\r\n        default:\r\n          return ''\r\n      }\r\n    },\r\n\r\n    filesUploadSuccess(res) {\r\n      this.form.drawingPath = res.data;\r\n    },\r\n    delay(time) {\r\n      return new Promise(resolve => setTimeout(resolve, time));\r\n    },\r\n    async load() {\r\n      try {\r\n\r\n        //延迟执行\r\n        await this.delay(1000);\r\n\r\n        // const url = \"/drawing/\" + this.currentPage + \"/\" + this.pageSize;\r\n        request.post(`/drawing/${this.currentPage}/${this.pageSize}`, JSON.parse(JSON.stringify(this.formInline))\r\n        ).then(res => {\r\n          console.log(res);\r\n          // this.tableData = res.data.records.map(record => {\r\n          //   const filePathArray = record.drawingPath.split('/');\r\n          //   const fileName = filePathArray[filePathArray.length - 1].replace(/^[^_]+_/, '');\r\n          //   const result = filePathArray.slice(3, filePathArray.length - 1).concat(fileName).join('/');\r\n          //   return { ...record, drawingPath: result };\r\n          // });\r\n          this.tableData = res.data.records;\r\n          this.total = res.data.total;\r\n\r\n\r\n        })\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n\r\n    },\r\n\r\n    reset() {\r\n      this.formInline = {};\r\n      this.$refs[\"resetformInline\"].resetFields();\r\n    },\r\n    add() {\r\n\r\n      this.dialogVisible = true;\r\n      this.form = {};\r\n\r\n      this.$nextTick(() => {\r\n        this.$refs[\"upload\"].clearFiles();\r\n      })\r\n    },\r\n    //删除单个文件\r\n    del_file(path) {\r\n      console.log(\"path\" + path)\r\n      request.post(\"/files/delDrawingFile\", {delDrawingPath: path}).then(res => {\r\n            console.log(res);\r\n            if (res.code === '0') {\r\n              ElMessage({\r\n                message: 'nginx文件同步成功',\r\n                type: 'success',\r\n              })\r\n            } else {\r\n              ElMessage({\r\n                message: 'nginx文件同步失败',\r\n                type: 'error',\r\n                //\r\n              })\r\n            }\r\n          }\r\n      )\r\n    },\r\n    //批量删除文件\r\n    del_files(ids) {\r\n      return request.post(\"/files/delDrawingFiles\", this.ids).then(res => {\r\n            console.log(res);\r\n            if (res.code === '0') {\r\n              ElMessage({\r\n                message: 'nginx文件同步成功',\r\n                type: 'success',\r\n              })\r\n            } else {\r\n              ElMessage({\r\n                message: 'nginx文件同步失败',\r\n                type: 'error',\r\n                //\r\n              })\r\n            }\r\n          }\r\n      )\r\n    },\r\n\r\n\r\n    saveDrawing() {\r\n      // Convert drawingType to an integer before submitting the form\r\n      this.form.drawingType = parseInt(this.form.drawingType);\r\n      //更新文件版本\r\n      if (this.form.id) {\r\n\r\n        const fieldNames = {\r\n          productNo: '产品编号',\r\n          drawingType: '图纸类型',\r\n          drawingName: '图纸名称',\r\n          drawingPath: '图纸文件',\r\n        };\r\n        const requiredFields = Object.keys(fieldNames);\r\n        let isFormValid = true;\r\n        let missingFields = [];\r\n        for (let i = 0; i < requiredFields.length; i++) {\r\n          const field = requiredFields[i];\r\n          if (!this.form[field]) {\r\n            isFormValid = false;\r\n            missingFields.push(fieldNames[field]);\r\n          }\r\n        }\r\n        if (isFormValid) {\r\n          request.post(\"/drawing\", this.form).then(res => {\r\n\r\n            if (res.code === '0') {\r\n              ElMessage({\r\n                message: '更新成功',\r\n                type: 'success',\r\n              })\r\n              this.load();//更新表单数据\r\n            } else {\r\n              ElMessage({\r\n                message: res.msg,\r\n                type: 'error',\r\n                //\r\n              })\r\n            }\r\n          });\r\n        } else {\r\n          ElMessage({\r\n            message: `缺少以下字段：${missingFields.join(', ')}`,\r\n            type: 'warning',\r\n          })\r\n        }\r\n      }\r\n      this.updatedDialogVisible = false;//关闭弹窗\r\n    },\r\n    save() {\r\n      // Convert drawingType to an integer before submitting the form\r\n      this.form.drawingType = parseInt(this.form.drawingType);\r\n      //更新\r\n      if (this.form.id) {\r\n        console.log(\"test:\" + this.form.drawingPath)\r\n        const fieldNames = {\r\n          productNo: '产品编号',\r\n          drawingType: '图纸类型',\r\n          drawingName: '图纸名称',\r\n          drawingPath: '图纸文件',\r\n        };\r\n        const requiredFields = Object.keys(fieldNames);\r\n        let isFormValid = true;\r\n        let missingFields = [];\r\n        for (let i = 0; i < requiredFields.length; i++) {\r\n          const field = requiredFields[i];\r\n          if (!this.form[field]) {\r\n            isFormValid = false;\r\n            missingFields.push(fieldNames[field]);\r\n          }\r\n        }\r\n        if (isFormValid) {\r\n          console.log(\"test2:\" + this.form.drawingPath)\r\n\r\n\r\n          request.post(\"/drawing/edit\", {editDrawing: this.editForm, drawing: this.form}).then(res => {\r\n            if (res.code === '0') {\r\n              ElMessage({\r\n                message: '修改成功',\r\n                type: 'success',\r\n              })\r\n              this.load();//更新表单数据\r\n            } else {\r\n              ElMessage({\r\n                message: res.msg,\r\n                type: 'error',\r\n                //\r\n              })\r\n            }\r\n          });\r\n        } else {\r\n          ElMessage({\r\n            message: `缺少以下字段：${missingFields.join(', ')}`,\r\n            type: 'warning',\r\n          })\r\n        }\r\n        this.editDialogVisible = false;\r\n\r\n      } else {\r\n\r\n        const fieldNames = {\r\n          productNo: '产品编号',\r\n          drawingType: '图纸类型',\r\n          drawingName: '图纸名称',\r\n          drawingPath: '图纸文件',\r\n        };\r\n        const requiredFields = Object.keys(fieldNames);\r\n        let isFormValid = true;\r\n        let missingFields = [];\r\n        for (let i = 0; i < requiredFields.length; i++) {\r\n          const field = requiredFields[i];\r\n          if (!this.form[field]) {\r\n            isFormValid = false;\r\n            missingFields.push(fieldNames[field]);\r\n          }\r\n        }\r\n        if (isFormValid) {\r\n          //新增\r\n          request.post(\"/drawing\", this.form).then(res => {\r\n            console.log(\"进入新增\");\r\n            console.log(\"once time\" + this.form.drawingPath);\r\n            console.log(\"res:\" + res);\r\n            if (res.code === '0') {\r\n              ElMessage({\r\n                message: '新增成功',\r\n                type: 'success',\r\n              })\r\n              this.load();//更新表单数据\r\n            } else {\r\n              console.log(\"this.form\" + this.form);\r\n              ElMessage({\r\n                message: res.msg,\r\n                type: 'error',\r\n\r\n              })\r\n              console.log(\"twice time\" + this.form.drawingPath);\r\n              //   如果新增失败 需要发起删除掉上传到文件服务器的文件\r\n              console.log(this.oldFilePath)\r\n              this.del_file(this.form.drawingPath)\r\n            }\r\n          });\r\n        } else {\r\n          ElMessage({\r\n            message: `缺少以下字段：${missingFields.join(', ')}`,\r\n            type: 'warning',\r\n          })\r\n        }\r\n        this.dialogVisible = false;//关闭弹窗\r\n      }\r\n\r\n\r\n    },\r\n\r\n    cancelUpate() {\r\n      //只要用户在取消之前进行了文件上传的工作 并且点击了取消 都要删除掉本次上传的文件\r\n      if (this.form.drawingPath !== this.oldFilePath) {\r\n        console.log(\"this.form.drawingPath:\" + this.form.drawingPath)\r\n        // this.del_file(this.form.drawingPath.substring(this.form.drawingPath.indexOf(\"/files/\") + \"/files/\".length))\r\n        // this.del_file(this.form.drawingPath.substring(this.form.drawingPath.indexOf(this.file_location) + this.file_location.length))\r\n        this.del_file(this.form.drawingPath)\r\n      }\r\n      //如果用户没有进行了文件上传的工作\r\n      //关闭对话框\r\n      this.dialogVisible = false;\r\n    },\r\n    cancelEdit() {\r\n      //关闭对话框\r\n      this.editDialogVisible = false;\r\n      //如果取消了更改就把这个editform再重置\r\n      this.editForm.drawingName = '';\r\n      this.editForm.drawingType = '';\r\n    },\r\n    //如果用户在新增或者修改窗口点击了取消\r\n    cancel() {\r\n      //新增的时候 如果点击了取消 而且又上传过文件 则需要把这个文件删除掉\r\n      if (this.oldFilePath !== \"\") {\r\n        //如果存储的文件发生了变化 并且用户点击了确定删除掉源文件\r\n        console.log(\"this.oldFilePath:\" + this.oldFilePath)\r\n        this.del_file(this.oldFilePath)\r\n      }\r\n\r\n      //关闭对话框\r\n      this.dialogVisible = false;\r\n    },\r\n    handleEdit(row) {\r\n      this.form = JSON.parse(JSON.stringify(row));\r\n      console.log(\"edit.row:\", this.form)\r\n      // this.oldFilePath =  this.form.drawingPath;\r\n      //点击编辑的时候先把老的图纸类型存起来\r\n      this.editForm.drawingType = this.form.drawingType;\r\n      this.editForm.drawingName = this.form.drawingName;\r\n\r\n      this.editDialogVisible = true;\r\n      //编辑记录的时候 如果重新上传了文件 要删除掉原文件\r\n    },\r\n    previewFile(row) {\r\n      this.form = JSON.parse(JSON.stringify(row));\r\n\r\n      request.get(\"/drawing/\" + this.form.id).then(res => {\r\n        console.log(res);\r\n        if (res.code === '0') {\r\n\r\n          //查询成功之后 开始进行调用预览\r\n          this.previewUrl = \"http://\" + res.data.drawingPath;\r\n          console.log(this.previewUrl);\r\n          window.open('http://127.0.0.1:8012/onlinePreview?url=' + encodeURIComponent(Base64.encode(this.previewUrl)));\r\n        } else {\r\n          ElMessage({\r\n            message: '预览失败',\r\n            type: 'error',\r\n          })\r\n        }\r\n      });\r\n\r\n    },\r\n    handleSizeChange() {\r\n      this.load()\r\n    },\r\n\r\n    handleCurrentChange() {\r\n      this.load()\r\n    },\r\n    handleHisSizeChange(){\r\n      this.historyLoad()\r\n    },\r\n    handleHisCurrentChange(){\r\n      this.historyLoad()\r\n    },\r\n\r\n    handleDelete(id, drawingPath) {\r\n      console.log(id)\r\n      request.delete(\"/drawing/\" + id).then(res => {\r\n        console.log(res);\r\n        if (res.code === '0') {\r\n          ElMessage({\r\n            message: '删除成功',\r\n            type: 'success',\r\n          })\r\n          //文件记录删除之后 同样要删除掉源文件\r\n          console.log(\"drawingPath\" + drawingPath)\r\n          this.del_file(drawingPath)\r\n        } else {\r\n          ElMessage({\r\n            message: '删除失败',\r\n            type: 'error',\r\n          })\r\n        }\r\n        this.load();\r\n      });\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style>\r\n.table tbody tr:nth-child(odd) {\r\n  background-color: #F5F5F5;\r\n}\r\n\r\n.table tbody tr:nth-child(even) {\r\n  background-color: #8A77A5;\r\n}\r\n\r\n.el-table_3_column_12 .cell {\r\n  background-color: #F5F5F5;\r\n}\r\n\r\n.el-table_3_column_12 .cell.highlight {\r\n  background-color: #8A77A5;\r\n}\r\n\r\n.radio-group-container {\r\n  display: flex;\r\n}\r\n</style>\r\n","import script from \"./Drawing.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Drawing.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Drawing.vue?vue&type=style&index=0&id=0c91fbfb&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["upload","ref","updateDrawing","__default__","name","components","data","previewUrl","form","historyForm","editForm","previewForm","formInline","search","currentPage","pageSize","currentHisPage","pageHisSize","total","totalHis","dialogVisible","updatedDialogVisible","editDialogVisible","historyDialogVisible","fileData","EditData","oldFilePath","tableData","historyTableData","ids","selectedFiles","created","this","load","computed","isDisabledUpload","productNo","drawingName","drawingType","trim","methods","async","length","file","url_raw","window","server","filesUploadUrl","filesUploadPort","drawingPath","replace","console","log","url","link","document","createElement","href","target","download","split","pop","click","Promise","resolve","setTimeout","ElMessage","message","type","handleDeleteDrawings","request","then","res","code","del_files","handleSelectionChange","val","map","v","id","delay","records","error","showHistory","row","JSON","parse","stringify","historyLoad","downloadFile","updateVersion","$nextTick","$refs","clearFiles","handleDialogHisClose","handleCloseUpdateDialog","cancelUpate","handleCloseEditDialog","cancel","handleCloseDialog","updateFile","params","FormData","string","append","axios","method","headers","sessionStorage","getItem","response","drawingVersion","newVersion","filePath","catch","handleBeforeUpdate","value","submit","uploadFile","handleBeforeUpload","exportExcel","ws","XLSX","wb","fileName","blob","Blob","bookType","FileSaver","getDrawingType","filesUploadSuccess","time","reset","resetFields","add","del_file","path","delDrawingPath","saveDrawing","parseInt","fieldNames","requiredFields","Object","keys","isFormValid","missingFields","i","field","push","msg","join","save","editDrawing","drawing","cancelEdit","handleEdit","previewFile","open","encodeURIComponent","Base64","handleSizeChange","handleCurrentChange","handleHisSizeChange","handleHisCurrentChange","handleDelete","__exports__"],"sourceRoot":""}